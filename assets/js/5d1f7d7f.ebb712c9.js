"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[899],{6489:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var s=a(1085),t=a(1184),r=a(9256);const l=a.p+"assets/medias/limitation-backward-scrolling-4a152913e4627589acf035a426a5cbb7.mp4",i=a.p+"assets/medias/limitation-backward-scrolling-workaround-55c03f3e9ee9a21a26c03850c5e414e1.mp4",o={sidebar_position:5},d="Limitations",c={id:"fundamentals/limitations",title:"Limitations",description:"The following are the current known limitations of Flash Calendar. Please, feel free to contribute and help address them.",source:"@site/docs/fundamentals/limitations.mdx",sourceDirName:"fundamentals",slug:"/fundamentals/limitations",permalink:"/flash-calendar/fundamentals/limitations",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Tips and Tricks",permalink:"/flash-calendar/fundamentals/tips-and-tricks"}},h={},p=[{value:"Infinite scrolling doesn&#39;t work backwards",id:"infinite-scrolling-doesnt-work-backwards",level:2},{value:"Work-around",id:"work-around",level:3}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"limitations",children:"Limitations"}),"\n",(0,s.jsx)(n.p,{children:"The following are the current known limitations of Flash Calendar. Please, feel free to contribute and help address them."}),"\n",(0,s.jsx)(n.h2,{id:"infinite-scrolling-doesnt-work-backwards",children:"Infinite scrolling doesn't work backwards"}),"\n",(0,s.jsxs)(n.p,{children:["We currently use ",(0,s.jsx)(n.code,{children:"onEndReached"})," to append new months, but also need a ",(0,s.jsx)(n.code,{children:"onStartReached"})," to prepend months. We need a reliable way to keep the scroll position intact when the user scrolls\nbackwards. Functionality-wise, ",(0,s.jsx)(n.code,{children:"prependMonths"})," is already built. We just need to hook it up to the scroll event."]}),"\n",(0,s.jsxs)(n.p,{children:["Waiting for Flash List's ",(0,s.jsx)(n.a,{href:"https://github.com/Shopify/flash-list/pull/824",children:"#824"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Here's what happens when you try to scroll backwards:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Expected"}),": The calendar scrolls to previous months infinitely at ",(0,s.jsx)(n.code,{children:"calendarPastScrollRangeInMonths"})," increments."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Actual"}),": The calendar doesn't scroll past the initial month."]}),"\n"]}),"\n",(0,s.jsxs)(r.z,{spacing:24,alignItems:"flex-start",children:[(0,s.jsx)("div",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'export const ScrollingBackwardsLimitation = () => {\n  return (\n    <VStack alignItems="stretch" grow spacing={12}>\n      <Text>Notice how it doesn\'t scroll past January</Text>\n\n      <Calendar.List\n        calendarFutureScrollRangeInMonths={1}\n        calendarInitialMonthId="2024-02-01"\n        calendarMaxDateId="2024-05-01"\n        calendarPastScrollRangeInMonths={1}\n        onCalendarDayPress={loggingHandler("onCalendarDayPress")}\n      />\n    </VStack>\n  );\n};\n'})})}),(0,s.jsx)("video",{controls:!0,width:300,children:(0,s.jsx)("source",{src:l,type:"video/mp4"})})]}),"\n",(0,s.jsx)(n.h3,{id:"work-around",children:"Work-around"}),"\n",(0,s.jsxs)(n.p,{children:["As a work-around, you can use ",(0,s.jsx)(n.code,{children:"calendarPastScrollRangeInMonths"})," and\n",(0,s.jsx)(n.code,{children:"calendarMinDateId"})," to preload all the months you need to scroll back to."]}),"\n",(0,s.jsxs)(n.p,{children:["This can have a performance impact since the month list is held in memory. However, we have an\n",(0,s.jsx)(n.a,{href:"https://github.com/MarceloPrado/flash-calendar/blob/70bbf3f5e19a6c10592a6ee606c57d7c880ff3d9/apps/example/src/components/PerfTestCalendar/PerfTestCalendarList.stories.tsx#L69-L102",children:"example"}),"\nrendering 2.000 months (166 years) just fine. Flash List performs really well with large lists, so it's likely that the main bottelneck will be how many items can be held in memory."]}),"\n",(0,s.jsxs)(r.z,{spacing:24,alignItems:"flex-start",children:[(0,s.jsx)("div",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'export const ScrollingBackwardsWorkaround = () => {\n  return (\n    <VStack alignItems="stretch" grow spacing={12}>\n      <Text>This preloads all past months between Jan 1st 2020 and today</Text>\n\n      <Calendar.List\n        calendarFutureScrollRangeInMonths={1}\n        calendarInitialMonthId="2024-02-01"\n        calendarMaxDateId="2024-05-01"\n        calendarMinDateId="2020-01-01"\n        calendarPastScrollRangeInMonths={50}\n        onCalendarDayPress={loggingHandler("onCalendarDayPress")}\n      />\n    </VStack>\n  );\n};\n'})})}),(0,s.jsx)("video",{controls:!0,width:300,children:(0,s.jsx)("source",{src:i,type:"video/mp4"})})]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);